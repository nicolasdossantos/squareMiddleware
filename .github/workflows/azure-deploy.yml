name: Deploy to Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: square-middleware-prod-api
  AZURE_WEBAPP_PACKAGE_PATH: "."
  NODE_VERSION: "20.x"

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false

      - name: Deploy to Azure Web App
        run: |
          # Create a clean deployment directory
          rm -rf deploy-temp deployment.zip
          mkdir -p deploy-temp

          # Copy only necessary application files
          echo "Copying application files..."
          cp -r src deploy-temp/
          cp package.json package-lock.json deploy-temp/

          # Copy minimal deploy scripts (no docs)
          if [ -d "deploy" ]; then
            mkdir -p deploy-temp/deploy
            cp deploy/*.sh deploy-temp/deploy/ 2>/dev/null || true
          fi

          # Install ONLY production dependencies
          cd deploy-temp
          echo "Installing production dependencies..."
          npm ci --omit=dev --production --no-audit --no-fund

          # Remove unnecessary files from node_modules
          echo "Cleaning up node_modules..."
          find node_modules -type f -name "*.md" -delete 2>/dev/null || true
          find node_modules -type f -name "*.txt" -delete 2>/dev/null || true  
          find node_modules -type f -name "*.yml" -delete 2>/dev/null || true
          find node_modules -type d -name "test" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type d -name "tests" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type d -name "docs" -exec rm -rf {} + 2>/dev/null || true
          find node_modules -type d -name ".github" -exec rm -rf {} + 2>/dev/null || true

          # Show package contents and size
          echo "=== Deployment Package Contents ==="
          echo "Application files:"
          du -sh src 2>/dev/null || true
          echo "Node modules:"
          du -sh node_modules 2>/dev/null || true
          echo "Total package size:"
          du -sh .
          echo "==================================="

          # Create optimized deployment package
          echo "Creating deployment package..."
          zip -q -r deployment.zip . \
            -x "*.log" \
            -x ".git*"

          # Move zip to parent and return
          mv deployment.zip ../
          cd ..

          # Verify final package
          echo "=== Final Deployment Package ==="
          ls -lh deployment.zip
          echo "Package size: $(du -h deployment.zip | cut -f1)"
          echo "================================"

          # Stop the app to prevent deployment conflicts
          echo "Stopping app..."
          az webapp stop \
            --resource-group square-middleware-prod-rg \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --output none

          # Deploy with extended timeout
          echo "Deploying application to Azure..."
          az webapp deploy \
            --resource-group square-middleware-prod-rg \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --src-path deployment.zip \
            --type zip \
            --async false \
            --clean true \
            --restart true \
            --timeout 900

          echo "âœ… Deployment complete!"

          # Cleanup
          rm -rf deploy-temp deployment.zip

      - name: Azure Logout
        if: always()
        run: az logout
